SHELL           	=       /bin/sh

#CCPL_LIB = /home/sunchao/work/wrf_roms_swan/wrf_roms_new/run/libs/c-coupler/cd3c1c1d44f9340d6b8e9f6b6e1fd6d3c2dce75a
#LIBccpl  = -L$(CCPL_LIB)/exe -lc-coupler -lstdc++
#INCccpl  = -I$(CCPL_LIB)/obj
NETCDFINC    =  -I/opt/netCDF-intel13-without-hdf5/include
NETCDFLIB    =  -L/opt/netCDF-intel13-without-hdf5/lib -lnetcdff -lnetcdf
MPIINC       =  -I/opt/intel/impi/3.2.2.006/include64
MPILIB       =  -L/opt/intel/impi/3.2.2.006/lib64


#
CPP            =  fpp 
CPPFLAGS_CCPL  = 
CPP_FLAGS      =  -C -P -D_REAL8_ -DWRF -DLINUX $(CPPFLAGS_CCPL) 

DM_FC          =  mpiifort
DM_F90         =  mpiifort -free
DM_CC          =  mpiicc

FC             =  $(DM_FC)
F90            =  $(DM_F90)
CC             =  $(DM_CC)
LD             =  $(FC)

SFC            =  ifort
SF90           =  ifort -free
SCC            =  icc

CFLAGS_LOCAL   = 
LDFLAGS_LOCAL  = 
FFLAGS_LOCAL   = 
INC_FLAGS      =  $(INCLDIR) $(INCccpl) $(CASE_LOCAL_INCL)
FFLAGS_DEFAULT =  -O2 -fp-model precise -assume byterecl -convert big_endian -fPIC -ftz
FFLAGS_DEBUG   =  -O0 -g -traceback -check bounds -fpe0 -ftz -warn errors -fpstkchk -mp -fPIC
FFLAGS         =  $(FFLAGS_DEFAULT) $(FFLAGS_LOCAL) $(INC_FLAGS) #-DLINUX -fPIC -g -traceback #-check bounds -check pointer
CFLAGS         =  $(CFLAGS_LOCAL) -DLINUX -DUNDERSCORE -fPIC
LDFLAGS        =  $(LDFLAGS_LOCAL) $(SLIBS) $(LIBccpl) $(CCPL_LIB) $(SLIBS) $(ULIBS)

###########################################################
#
#	Macros, these should be generic for all machines

LN		=  ln -sf
MAKE	=  make -i -r
RM		=  /bin/rm -f
CP		=  /bin/cp
AR		=  ar 
MKDIR           =  /bin/mkdir -p


.IGNORE:
.SUFFIXES: .c .f .F .F90 .f90 .o .fpp

#	There is probably no reason to modify these rules

.c.o:
	$(RM) $@
	$(CC) $(CFLAGS2) -c $<	

.f.o:
	$(RM) $@ $*.mod
	$(FC) $(FFLAGS) -c $< 

.fpp.o:
	$(RM) $@ $*.mod $*.f
	$(CPP) $(CPP_FLAGS) $< > $*.f
	$(FC) $(FFLAGS) -c $*.f 
	$(RM) $*.f

.F.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPP_FLAGS) $< > $*.f90
	$(F90) $(FFLAGS) -c $*.f90 
	$(RM) $*.f90

.F90.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPP_FLAGS) $< > $*.fpp
	$(F90) $(FFLAGS) -c $*.fpp 
	#$(RM) $*.fpp

.f90.o:
	$(RM) $@ $*.mod
	$(F90) $(FFLAGS) -c $< 
