SHELL           	=       /bin/sh

#CCPL_LIB = 
LIBccpl  = -L$(CCPL_LIB)/exe -lc-coupler -lstdc++
INCccpl  = -I$(CCPL_LIB)/obj
NETCDFINC    =  -I$(NETCDFPATH)/include
NETCDFLIB    =  -L$(NETCDFPATH)/lib -lnetcdff -lnetcdf
#MPIINC       =  -I$(MPIPATH)/include64
#MPILIB       =  -L$(MPIPATH)/lib64
MPIINC       =  -I$(MPIPATH)/include
MPILIB       =  -L$(MPIPATH)/lib

#
CPP            =  fpp 
#CPPFLAGS_CCPL  =  $(CPPFLAGS_CCPL)
CPP_FLAGS      =  -C -P -D_REAL8_ -DWRF -DLINUX $(CPPFLAGS_CCPL) -DCCPL_DA

DM_FC          =  mpif90 #mpiifort
DM_F90         =  mpif90 #mpiifort -free
DM_CC          =  mpic++ #mpiicc

FC             =  $(DM_FC)
F90            =  $(DM_F90)
CC             =  $(DM_CC)
LD             =  $(FC)

SFC            =  $(DM_FC) #ifort
SF90           =  $(DM_F90) #ifort -free
SCC            =  $(DM_CC) #icc

CFLAGS_LOCAL   = 
LDFLAGS_LOCAL  =  $(NETCDFLIB) $(MPILIB)
FFLAGS_LOCAL   =  $(NETCDFINC) $(MPIINC)
INC_FLAGS      =  $(INCLDIR) $(INCccpl) $(CASE_LOCAL_INCL)
FFLAGS_DEFAULT =  -O2 -fp-model precise -assume byterecl -convert big_endian -fPIC -ftz
FFLAGS_DEBUG   =  -O0 -g -traceback -check bounds -fpe0 -ftz -warn errors -fpstkchk -mp -fPIC
FFLAGS         =  $(FFLAGS_DEFAULT) $(FFLAGS_LOCAL) $(INC_FLAGS) -DLINUX -fPIC #-g -traceback #-check bounds -check pointer
CFLAGS         =  $(CFLAGS_LOCAL) -DLINUX -DUNDERSCORE -fPIC
LDFLAGS        =  $(LDFLAGS_LOCAL) $(SLIBS) $(LIBccpl) $(SLIBS) $(ULIBS)

###########################################################
#
#	Macros, these should be generic for all machines

LN		=  ln -sf
MAKE	=  make -i -r
RM		=  /bin/rm -f
CP		=  /bin/cp
AR		=  ar 
MKDIR           =  /bin/mkdir -p


.IGNORE:
.SUFFIXES: .c .f .F .F90 .f90 .o .fpp

#	There is probably no reason to modify these rules

.c.o:
	$(RM) $@
	$(CC) $(CFLAGS2) -c $<	

.f.o:
	$(RM) $@ $*.mod
	$(FC) $(FFLAGS) -c $< 

.fpp.o:
	$(RM) $@ $*.mod $*.f
	$(CPP) $(CPP_FLAGS) $< > $*.f
	$(FC) $(FFLAGS) -c $*.f 
	$(RM) $*.f

.F.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPP_FLAGS) $< > $*.f90
	$(F90) $(FFLAGS) -c $*.f90 
	$(RM) $*.f90

.F90.o:
	$(RM) $@ $*.mod
	$(CPP) $(CPP_FLAGS) $< > $*.f90
	$(F90) $(FFLAGS) -c $*.f90 
	$(RM) $*.f90

.f90.o:
	$(RM) $@ $*.mod
	$(F90) $(FFLAGS) -c $< 
